doctype
head
  title An example

  link(rel='stylesheet', href='https://getdash.io/css/karmic-style.css')
  script(type='text/javascript', src="http://code.jquery.com/jquery-1.9.1.min.js")
  script.
    $(document).ready(function(){
      //- grab every h1, h2, h3
      //- Note: these stay in DOM order
      $('h1, h2, h3').each(function(){
        //- console.log($(this).text());

        //- If it's an H1 make a top level LI
        if( $(this).is('h1')  ){
          $('ul.nav').append('<li><a href="">'+$(this).text()+'</a></li>');
        }

        //- if it's an H2, wrap the LI in a UL and add that
        //- to the last current top level LI
        if( $(this).is('h2')  ){
          $('ul.nav>li').last().append('<ul><li><a href="">'+$(this).text()+'</a></li></ul>');
          //- This currently creates a UL wrapper for EVERY H2
          //- that's wrong. it should detect if this is the first H2
          //- following an H1, and only then create a UL,
          //- and then subsequent ones should get added to that
          //- first UL
        }

        //- All of this is actually maddeningly complicated.
        //- This could be handled with classes and not nesting.
        //- Not semantic... but... simplicity!
        
      });
      //- grab every h1, h2, h3
      //- print em to see what the orders like
    });
body

  ul.col-xs-4.section.section--fog.nav
    //- Stuff gets added here by the nav JS

  div.col-xs-8.section.section--fog
    //- Harp will let us loop through these, but that's
    //- a bad idea because it will include them in file
    //- order, which makes content difficult to arrange.

    //- This seems fine. Slate does something similar.

    include:markdown /includes/one.md
    include:markdown /includes/two.md
    include:markdown /includes/three.md

    //- TODO - TOCIFY these includes.


